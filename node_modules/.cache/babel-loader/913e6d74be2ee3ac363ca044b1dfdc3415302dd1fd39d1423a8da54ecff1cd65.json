{"ast":null,"code":"var _jsxFileName = \"/Users/yunsuk/REACT/01-starting-project 2/src/App.js\";\nimport \"./App.css\";\nimport Homepage from \"./Homepage/Homepage\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Postpage from \"./Postpage/Postpage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: Homepage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/post\",\n        component: Postpage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\n\n//css는 아래쪽에 있는 코드를 우선순위로 생각한다.\n//클래스네임 여러개는  \"class1 class2\" 로 표현\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Homepage","BrowserRouter","Router","Routes","Route","Postpage","jsxDEV","_jsxDEV","App","children","exact","path","component","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yunsuk/REACT/01-starting-project 2/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport Homepage from \"./Homepage/Homepage\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Postpage from \"./Postpage/Postpage\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route exact path=\"/\" component={Homepage} />\n        <Route path=\"/post\" component={Postpage} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n\n//css는 아래쪽에 있는 코드를 우선순위로 생각한다.\n//클래스네임 여러개는  \"class1 class2\" 로 표현\n"],"mappings":";AAAA,OAAO,WAAW;AAClB,OAAOA,QAAQ,MAAM,qBAAqB;AAC1C,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAOC,QAAQ,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB,oBACED,OAAA,CAACL,MAAM;IAAAO,QAAA,eACLF,OAAA,CAACJ,MAAM;MAAAM,QAAA,gBACLF,OAAA,CAACH,KAAK;QAACM,KAAK;QAACC,IAAI,EAAC,GAAG;QAACC,SAAS,EAAEZ;MAAS;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7CT,OAAA,CAACH,KAAK;QAACO,IAAI,EAAC,OAAO;QAACC,SAAS,EAAEP;MAAS;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb,CAAC;AAACC,EAAA,GATIT,GAAG;AAWT,eAAeA,GAAG;;AAElB;AACA;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}